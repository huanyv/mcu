C51 COMPILER V9.57.0.0   MAIN                                                              03/25/2019 12:54:13 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<reg51.h>
   2          #include<intrins.h>
   3          
   4          //--定义要使用的IO口--//
   5          #define COMMONPORTS                P0
   6          sbit SRCLK= P3 ^ 6;
   7          sbit RCLK = P3 ^ 5;
   8          sbit SER  = P3 ^ 4;
   9          sbit KEY1 = P3 ^ 0; //按键2用于时间设置
  10          sbit KEY2 = P3 ^ 2; //按键3用于时间设置加
  11          sbit KEY3 = P3 ^ 3;        //按键4用于时间设置减
  12          
  13          unsigned char Time,time_hrs=20,time_min=59,time_sec=35;
  14          unsigned char MENU;//菜单切换标志位
  15          //--列选通控制--//
  16          unsigned char code TAB[8]  = {0x7f,0xbf,0xdf,0xef,0xf7,0xfb,0xfd,0xfe};
  17          
  18          //--点阵字码--//
  19          unsigned char code CHARCODE [113]=
  20          {
  21              0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //空白
  22              0x3e,0x41,0x41,0x41,0x3e,0x00,          //0
  23              0x11,0x21,0x7F,0x01,0x01,0x00,          //1
  24              0x21,0x43,0x45,0x49,0x31,0x00,          //2
  25              0x22,0x41,0x49,0x49,0x36,0x00,          //3
  26              0x0C,0x14,0x24,0x7F,0x04,0x00,          //4
  27              0x72,0x51,0x51,0x51,0x4E,0x00,          //5
  28              0x3E,0x49,0x49,0x49,0x26,0x00,          //6
  29              0x40,0x47,0x48,0x50,0x60,0x00,          //7
  30              0x36,0x49,0x49,0x49,0x36,0x00,          //8
  31              0x32,0x49,0x49,0x49,0x3E,0x00,          //9
  32              0x36,0x36,0x00,                                  //:
  33              0x3E,0x2A,0x3E,0x00,0x14,0x11,0x7F,0x10,0x00,                   //时
  34              0xBF,0x40,0xBE,0xAA,0xBE,0x81,0xFF,0x00,             //间
  35              0xA0,0x60,0x3F,0x02,0x58,0xD5,0x92,0xD6,0x59,0x00,         //设
  36              0xD1,0xDF,0xD5,0xF5,0xD5,0xDF,0xD1,                                   //置
  37              0x11,0x22,0x54,0x18,0x91,0x5F,0x20,0x10,             //分
  38          };
  39          
  40          unsigned char WS[50];//用来存放要显示的位数的值
  41          
  42          /*******************************************************************************
  43          * 函数名         : buffer_normal();
  44          * 函数功能                 : 正常显示缓冲数组
  45          * 输入           : 无
  46          * 输出                  : 无
  47          *******************************************************************************/
  48          void buffer_normal()                                        //正常显示数组
  49          {
  50   1          unsigned char a,b,c,d,e,f,g;
  51   1          for(g=35; g<43; g++)                                                      //空白
  52   1          {
  53   2              WS[g]=CHARCODE[g-35];
  54   2          }
C51 COMPILER V9.57.0.0   MAIN                                                              03/25/2019 12:54:13 PAGE 2   

  55   1      
  56   1          for(f=29; f<35; f++)                                                      //分钟个位
  57   1          {
  58   2              WS[f]=CHARCODE[time_min%10*6+f-21];
  59   2          }
  60   1      
  61   1          for(e=23; e<29; e++)
  62   1          {   //分钟十位
  63   2              WS[e]=CHARCODE[time_min%100/10*6+e-15];
  64   2          }
  65   1      
  66   1          for(d=20; d<23; d++)                                                      //秒点
  67   1          {
  68   2              WS[d]=CHARCODE[d+48];
  69   2          }
  70   1      
  71   1          for(c=14; c<20; c++)                                                      //小时个位
  72   1          {
  73   2              WS[c]=CHARCODE[time_hrs%10*6+c-6];
  74   2          }
  75   1      
  76   1          for(b=8; b<14; b++)                                                      //小时十位
  77   1          {
  78   2              WS[b]=CHARCODE[time_hrs%100/10*6+b];
  79   2          }
  80   1      
  81   1          for(a=0; a<8; a++)                                                      //空白
  82   1          {
  83   2              WS[a]=CHARCODE[a];
  84   2          }
  85   1      }
  86          /*******************************************************************************
  87          * 函数名         : timeset();
  88          * 函数功能                 : 时间设置显示缓冲数组
  89          * 输入           : 无
  90          * 输出                  : 无
  91          *******************************************************************************/
  92          void timeset()                                        //时间设置
  93          {
  94   1          unsigned char a,b,c;
  95   1      
  96   1          for(c=42; c<50; c++)                                      //空白
  97   1          {
  98   2              WS[c]=CHARCODE[c-42];
  99   2          }
 100   1      
 101   1          for(b=8; b<42; b++)                                      //时间设置
 102   1          {
 103   2              WS[b]=CHARCODE[b+63];
 104   2          }
 105   1      
 106   1          for(a=0; a<8; a++)                              //空白
 107   1          {
 108   2              WS[a]=CHARCODE[a];
 109   2          }
 110   1      
 111   1      }
 112          /*******************************************************************************
 113          * 函数名         : Hour_setting();
 114          * 函数功能                 : 小时设置显示缓冲数组
 115          * 输入           : 无
 116          * 输出                  : 无
C51 COMPILER V9.57.0.0   MAIN                                                              03/25/2019 12:54:13 PAGE 3   

 117          *******************************************************************************/
 118          void Hour_setting()                                        //小时设置显示缓冲数组
 119          {
 120   1          unsigned char a,b,c,d,e;
 121   1          for(e=28; e<36; e++)                                                      //空白
 122   1          {
 123   2              WS[e]=CHARCODE[e-28];
 124   2          }
 125   1      
 126   1          for(d=20; d<28; d++)                                                      //时
 127   1          {
 128   2              WS[d]=CHARCODE[d+51];
 129   2          }
 130   1      
 131   1          for(c=14; c<20; c++)                                                      //小时个位
 132   1          {
 133   2              WS[c]=CHARCODE[time_hrs%10*6+c-6];
 134   2          }
 135   1      
 136   1          for(b=8; b<14; b++)                                                      //小时十位
 137   1          {
 138   2              WS[b]=CHARCODE[time_hrs%100/10*6+b];
 139   2          }
 140   1      
 141   1          for(a=0; a<8; a++)                                                      //空白
 142   1          {
 143   2              WS[a]=CHARCODE[a];
 144   2          }
 145   1      }
 146          /*******************************************************************************
 147          * 函数名         : Minute_setting();
 148          * 函数功能                 : 分钟设置显示缓冲数组
 149          * 输入           : 无
 150          * 输出                  : 无
 151          *******************************************************************************/
 152          void Minute_setting()                                        //分钟设置显示缓冲数组
 153          {
 154   1          unsigned char a,b,c,d,e;
 155   1          for(e=28; e<36; e++)                                                      //空白
 156   1          {
 157   2              WS[e]=CHARCODE[e-28];
 158   2          }
 159   1      
 160   1          for(d=20; d<28; d++)                                                      //分
 161   1          {
 162   2              WS[d]=CHARCODE[d+85];
 163   2          }
 164   1      
 165   1          for(c=14; c<20; c++)                                                      //分钟个位
 166   1          {
 167   2              WS[c]=CHARCODE[time_min%10*6+c-6];
 168   2          }
 169   1      
 170   1          for(b=8; b<14; b++)
 171   1          {   //分钟十位
 172   2              WS[b]=CHARCODE[time_min%100/10*6+b];
 173   2          }
 174   1      
 175   1          for(a=0; a<8; a++)                                                      //空白
 176   1          {
 177   2              WS[a]=CHARCODE[a];
 178   2          }
C51 COMPILER V9.57.0.0   MAIN                                                              03/25/2019 12:54:13 PAGE 4   

 179   1      }
 180          
 181          /*******************************************************************************
 182          * 函数名         : delay();
 183          * 函数功能                 : 延时
 184          * 输入           : 无
 185          * 输出                  : 无
 186          *******************************************************************************/
 187          void delay(unsigned int time)
 188          {
 189   1          unsigned int i,j;
 190   1          for(i=0; i<time; i++)
 191   1              for(j=0; j<47; j++);
 192   1      }
 193          /*******************************************************************************
 194          * 函数名         : TimerConfiguration();
 195          * 函数功能                 : 配置定时器值
 196          * 输入           : 无
 197          * 输出                  : 无
 198          *******************************************************************************/
 199          void TimerConfiguration()
 200          {
 201   1          TMOD = 0x01; //选择工作方式1
 202   1          TH0 = 0x3C;         //设置初始值,定时50MS
 203   1          TL0 = 0xB0;
 204   1          EA = 1;                         //打开总中断
 205   1          ET0 = 1;                 //打开定时器0中断
 206   1          TR0 = 1;                 //启动定时器0
 207   1      }
 208          /*******************************************************************************
 209          * 函数名         : Timer0()
 210          * 函数功能                 : 定时器0中断函数
 211          * 输入           : 无
 212          * 输出                  : 无
 213          *******************************************************************************/
 214          void Timer0() interrupt 1
 215          {
 216   1          TH0 = 0x3C;         //设置初始值50ms
 217   1          TL0 = 0xB0;
 218   1          Time++;
 219   1          if(Time==20)
 220   1          {
 221   2              Time=0;
 222   2              time_sec++;
 223   2              if(time_sec==60)
 224   2              {
 225   3                  time_sec=0;
 226   3                  time_min++;
 227   3                  if(time_min==60)
 228   3                  {
 229   4                      time_min=0;
 230   4                      time_hrs++;
 231   4                      if(time_hrs==24)
 232   4                      {
 233   5                          time_hrs=0;
 234   5                      }
 235   4                  }
 236   3              }
 237   2          }
 238   1      }
 239          
 240          /*******************************************************************************
C51 COMPILER V9.57.0.0   MAIN                                                              03/25/2019 12:54:13 PAGE 5   

 241          * 函数名         : Hc595SendByte(unsigned char dat);
 242          * 函数功能                 : 向74H595发送一个字节的数据
 243          * 输入           : 无
 244          * 输出                  : 无
 245          *******************************************************************************/
 246          void Hc595SendByte(unsigned char dat)
 247          {
 248   1          unsigned char a;
 249   1          SRCLK=0;
 250   1          RCLK=0;
 251   1          for(a=0; a<8; a++)
 252   1          {
 253   2              SER=dat>>7;
 254   2              dat<<=1;
 255   2      
 256   2              SRCLK=1;
 257   2              _nop_();
 258   2              _nop_();
 259   2              SRCLK=0;
 260   2          }
 261   1      
 262   1          RCLK=1;
 263   1          _nop_();
 264   1          _nop_();
 265   1          RCLK=0;
 266   1      }
 267          /*******************************************************************************
 268          * 函数名         : display();
 269          * 函数功能                 : 显示函数
 270          * 输入           : 无
 271          * 输出                  : 无
 272          *******************************************************************************/
 273          void  display(unsigned char array)
 274          {
 275   1          unsigned char tab;
 276   1          unsigned int  a,b,c;
 277   1      
 278   1          for(a=0; a<8; a++)
 279   1          {
 280   2              if(a ==7)
 281   2              {
 282   3                  b++;
 283   3                  if(b==array)                           //数组数量减8
 284   3                  {
 285   4                      b=0;
 286   4                  }
 287   3              }
 288   2              for(c=0; c<2; c++)                                          //控制流动速度
 289   2              {
 290   3                  for(tab=0; tab<8; tab++)
 291   3                  {
 292   4                      Hc595SendByte(0x00);                    //消隐
 293   4                      COMMONPORTS        = TAB[tab];                    //P0输出字码
 294   4                      Hc595SendByte(WS[tab+b]);
 295   4                      delay(1);
 296   4                  }
 297   3              }
 298   2          }
 299   1      }
 300          /*******************************************************************************
 301          * 函数名         : array_clear();
 302          * 函数功能                 : 缓冲数组清零函数
C51 COMPILER V9.57.0.0   MAIN                                                              03/25/2019 12:54:13 PAGE 6   

 303          * 输入           : 无
 304          * 输出                  : 无
 305          *******************************************************************************/
 306          void  array_clear()
 307          {
 308   1          unsigned int  a;
 309   1      
 310   1          for(a=0; a<50; a++)
 311   1          {
 312   2              WS[a]=0;
 313   2          }
 314   1      }
 315          
 316          /*******************************************************************************
 317          * 函数名         : main
 318          * 函数功能                   : 主函数
 319          * 输入           : 无
 320          * 输出                  : 无
 321          *******************************************************************************/
 322          
 323          void main()
 324          {
 325   1          unsigned char s=0;
 326   1          MENU=0;
 327   1          TimerConfiguration();
 328   1          while(1)
 329   1          {
 330   2              if(KEY1==0)
 331   2              {
 332   3                  s++;
 333   3                  if(s>2)
 334   3                  {
 335   4                      s=0;
 336   4                      MENU++;
 337   4                  }
 338   3              }
 339   2      
 340   2              if(MENU==0)                           //正常走时
 341   2              {
 342   3                  array_clear();
 343   3                  buffer_normal();
 344   3                  display(35);
 345   3              }
 346   2      
 347   2              if(MENU==1)                           //显示时间设置
 348   2              {
 349   3                  timeset();
 350   3                  display(42);
 351   3              }
 352   2      
 353   2              if(MENU==2)                           //小时设置
 354   2              {
 355   3                  array_clear();
 356   3                  if(KEY2==0)
 357   3                  {
 358   4                      s++;
 359   4                      if(s>2)
 360   4                      {
 361   5                          s=0;
 362   5                          time_hrs++;                 //小时加
 363   5                          if(time_hrs>23)
 364   5                          {
C51 COMPILER V9.57.0.0   MAIN                                                              03/25/2019 12:54:13 PAGE 7   

 365   6                              time_hrs=0;
 366   6                          }
 367   5                      }
 368   4                  }
 369   3      
 370   3                  if(KEY3==0)
 371   3                  {
 372   4                      s++;
 373   4                      if(s>2)
 374   4                      {
 375   5                          s=0;
 376   5                          time_hrs--;                 //小时减
 377   5                          if(time_hrs>24)
 378   5                          {
 379   6                              time_hrs=23;
 380   6                          }
 381   5                      }
 382   4                  }
 383   3      
 384   3                  Hour_setting();
 385   3                  display(28);
 386   3              }
 387   2      
 388   2              if(MENU==3)                           //分钟设置
 389   2              {
 390   3                  array_clear();
 391   3                  if(KEY2==0)
 392   3                  {
 393   4                      s++;
 394   4                      if(s>2)
 395   4                      {
 396   5                          s=0;
 397   5                          time_min++;                 //分钟加
 398   5                          if(time_min>59)
 399   5                          {
 400   6                              time_min=0;
 401   6                          }
 402   5                      }
 403   4                  }
 404   3      
 405   3                  if(KEY3==0)
 406   3                  {
 407   4                      s++;
 408   4                      if(s>2)
 409   4                      {
 410   5                          s=0;
 411   5                          time_min--;                 //分钟减
 412   5                          if(time_min>60)
 413   5                          {
 414   6                              time_min=59;
 415   6                          }
 416   5                      }
 417   4                  }
 418   3      
 419   3                  Minute_setting();
 420   3                  display(28);
 421   3              }
 422   2      
 423   2              if(MENU>3)
 424   2              {
 425   3                  MENU=0;
 426   3                  time_sec=0;
C51 COMPILER V9.57.0.0   MAIN                                                              03/25/2019 12:54:13 PAGE 8   

 427   3              }
 428   2      
 429   2          }
 430   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1092    ----
   CONSTANT SIZE    =    121    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     55       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
