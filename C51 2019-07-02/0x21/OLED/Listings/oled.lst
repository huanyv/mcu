C51 COMPILER V9.60.0.0   OLED                                                              06/02/2019 22:26:12 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE oled\oled.c COMPACT OPTIMIZE(8,SPEED) BROWSE INCDIR(.\i2c;.\oled) DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "i2c.h"
   3          
   4          
   5          
   6          #if  ASCII_8x16_ENABLE
   7          #include "ASCII_8x16.h"
   8          #endif
   9          
  10          #if  ASCII_16x32_ENABLE
              #include "ASCII_16x32.h"
              #endif
  13          
  14          
  15          
  16          
  17          void delay_ms(uint16_t i) {
  18   1        uint8_t x;
  19   1        while(i--)
  20   1          for(x=0;x<123;x++);
  21   1      }
  22          
  23          
  24          void WriteCmd(unsigned char I2C_Command)//Ð´ÃüÁî
  25          {
  26   1        I2C_Start();
  27   1        I2C_Write_Byte(OLED_ADDR);//OLEDÆ÷¼þµØÖ·
  28   1        I2C_Respons();
  29   1        I2C_Write_Byte(0x00);//Ð´ÃüÁî
  30   1        I2C_Respons();
  31   1        I2C_Write_Byte(I2C_Command);
  32   1        I2C_Respons();
  33   1        I2C_Stop();
  34   1      }
  35          
  36          void WriteDat(unsigned char I2C_Data)//Ð´Êý¾Ý
  37          {
  38   1        I2C_Start();
  39   1        I2C_Write_Byte(OLED_ADDR);
  40   1        I2C_Respons();
  41   1        I2C_Write_Byte(0x40);//Ð´Êý¾Ý
  42   1        I2C_Respons();
  43   1        I2C_Write_Byte(I2C_Data);
  44   1        I2C_Respons();
  45   1        I2C_Stop();
  46   1      }
  47          
  48          
  49          void OLED_Init(void)
  50          {
  51   1        delay_ms(100); //ÕâÀïµÄÑÓÊ±ºÜÖØÒª
  52   1        
  53   1        WriteCmd(0XAE);  //display off //¹ØÏÔÊ¾
  54   1        WriteCmd(0X20);   //Set Memory Addressing Mode  //ÉèÖÃÄÚ´æÑ°Ö·Ä£Ê½//00£¬Ë®Æ½Ñ°Ö·Ä£Ê½;  01£¬´¹Ö±Ñ°Ö·Ä£Ê½;   
C51 COMPILER V9.60.0.0   OLED                                                              06/02/2019 22:26:12 PAGE 2   

             -10£¬Ò³ÃæÑ°Ö·Ä£Ê½(ÖØÖÃ);    11£¬ÎÞÐ§
  55   1        WriteCmd(0X02);   //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addressing Mode (RES
             -ET);11,Invalid
  56   1        WriteCmd(0XB0);   //Set Page Start Address for Page Addressing Mode,0-7    //ÎªÒ³ÃæÑ°Ö·Ä£Ê½ÉèÖÃÒ³Ãæ¿ªÊ¼µØÖ
             -·£¬0-7
  57   1        WriteCmd(0XC8);   //Set COM Output Scan Direction    //  ÉèÖÃÁÐÊä³öÉ¨Ãè·½Ïò£¨C8Õý³£   C0ÉÏÏÂ·´ÖÃ£©
  58   1        WriteCmd(0X00);  //---set low column address   //ÉèÖÃµÍÁÐµØÖ·
  59   1        WriteCmd(0X10);  //---set high column address  //ÉèÖÃ¸ßÁÐµØÖ·
  60   1        WriteCmd(0X40);  //--set start line address
  61   1        WriteCmd(0X81);  //--set contrast control register
  62   1        WriteCmd(0XFF);  //ÁÁ¶Èµ÷½Ú 0x00~0xff
  63   1        WriteCmd(0XA1);  //--set segment re-map 0 to 127//ÉèÖÃÏ¸·ÖÖØÓ³Éä
  64   1        WriteCmd(0XA6);  //--set normal display        //ÉèÖÃÕý³£/·´Ïò£¨A6Õý³£  A7·´ÏòÏÔÊ¾ £©
  65   1        WriteCmd(0XA8);  //--set multiplex ratio(1 to 64)  //ÉèÖÃ¶àÂ·¸´ÓÃ±ÈÂÊ
  66   1        WriteCmd(0X3F);  //
  67   1        WriteCmd(0XA4);  //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
  68   1        WriteCmd(0XD3);  //-set display offset     //ÉèÖÃÏÔÊ¾Æ«ÒÆ
  69   1        WriteCmd(0X00);  //-not offset
  70   1        WriteCmd(0XD5);  //--set display clock divide ratio/oscillator frequency  // ÉèÖÃÏÔÊ¾Ê±ÖÓ·ÖÆµ
  71   1        WriteCmd(0XF0);  //--set divide ratio
  72   1        WriteCmd(0XD9);  //--set pre-charge period  //ÉèÖÃÔ¤³äµçÆÚ
  73   1        WriteCmd(0X22);  //
  74   1        WriteCmd(0XDA);  //--set com pins hardware configuration  // ÉèÖÃCOMÒý½ÅÓ²¼þÅäÖÃ
  75   1        WriteCmd(0X12);  //ÆôÓÃ±¸ÓÃCOMÒý½ÅÅäÖÃ
  76   1        WriteCmd(0XDB);  //--set vcomh   //ÉèÖÃ  vcomh  È¡ÏûÑ¡Ôñ¼¶±ð
  77   1        WriteCmd(0X20);  //0x20,0.77xVcc
  78   1        WriteCmd(0X8D);  //--set DC-DC enable
  79   1        WriteCmd(0X14);  //ÔÚÏÔÊ¾ÆÚ¼äÊ¹ÓÃµçºÉ±Ã
  80   1        WriteCmd(0XAF);  //--turn on oled panel//¿ªÏÔÊ¾
  81   1        
  82   1        OLED_CLS(); // ¿ª»úÇåÆÁ
  83   1      }
  84          
  85          
  86          
  87          void OLED_SetPos(unsigned char x, unsigned char y) //ÉèÖÃÆðÊ¼µã×ø±ê
  88          { 
  89   1        WriteCmd(0xb0+y);  // ÆðÊ¼Ò³ µØÖ·
  90   1        WriteCmd(((x&0xf0)>>4)|0x10); // ÆðÊ¼ÁÐµØÖ·µÄ¸ßËÄÎ»
  91   1        WriteCmd(x&0x0f);    // ÆðÊ¼µØÖ·µÄµÍËÄÎ»
  92   1      }
  93          
  94          void OLED_Fill(uint8_t dat) {
  95   1        uint8_t i,j;
  96   1        for(i=0;i<8;i++) {
  97   2          OLED_SetPos(0,i);
  98   2          for(j=0;j<128;j++) {
  99   3            WriteDat(dat);
 100   3          }
 101   2        }
 102   1      }
 103          
 104          void OLED_CLS(void) {
 105   1        OLED_Fill(0x00);
 106   1      }
 107          
 108          
 109          #if  ASCII_8x16_ENABLE
 110          void Showstr8x16(uint8_t x,uint8_t y,uint8_t ch[]) {
 111   1        uint8_t i,j,t;
 112   1        uint8_t c;
 113   1        for(t = 0;ch[t] != '\0';t++){
C51 COMPILER V9.60.0.0   OLED                                                              06/02/2019 22:26:12 PAGE 3   

 114   2          c = ch[t] - 32;
 115   2          if(x>120)
 116   2            x = 0;
 117   2          for(i=0;i<2;i++) {
 118   3            OLED_SetPos(x,y+i);
 119   3            for(j=0;j<8;j++) {
 120   4              WriteDat(F8X16[c][8*i+j]);
 121   4            }
 122   3          }
 123   2          x = x+8;
 124   2          
 125   2        } 
 126   1      }
 127          #endif /* ASCII_8x16_ENABLE */
 128          
 129          #if  ASCII_16x32_ENABLE
              void Showstr16x32(uint8_t x,uint8_t y,uint8_t ch[]) {
                uint8_t i,j,t;
                uint8_t c;
                for(t = 0;ch[t] != '\0';t++){
                  c = ch[t] - 32;
                  if(x>112) {
                    x = 0;
                    y = y+4;
                  }
                  for(i=0;i<4;i++) {
                    OLED_SetPos(x,y+i);
                    for(j=0;j<16;j++) {
                      WriteDat(F16x32[c][16*i+j]);
                    }
                  }
                  x = x+16;
                  
                } 
              }
              #endif /* ASCII_16x32_ENABLE */
 150          
 151          
 152          
 153          
 154          
 155          
 156          
 157          
 158          
 159          
 160          
 161          
 162          
 163          
 164          
 165          
 166          
 167          
 168          
 169          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    536    ----
   CONSTANT SIZE    =   1536    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   OLED                                                              06/02/2019 22:26:12 PAGE 4   

   PDATA SIZE       =   ----      15
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
