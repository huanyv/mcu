C51 COMPILER V9.00   MAIN                                                                  12/26/2018 15:00:50 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\0000000\keil4\C51\BIN\C51.EXE main.c COMPACT BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /***********************************************************************                           ||||||||||||||||||||
   2          初始界面->按下k4进入设置->时间暂停->k3调整实时时间->不显示光标后时间启动                           |铃声暂为长bi~~~声 |
   3                                                                                                                                                                                     |还未更改，有些刺耳|
   4          初始界面->按下k2进入闹钟界面->k4设置响铃光标->k3调整时间->k2返回初始界面                           ||||||||||||||||||||
   5                                     
   6          初始界面->按下k1->实时时间旁显示小闹钟图标->闹钟已启动->再次按k1关闭闹钟                           
   7          ***********************************************************************/
   8          #include<reg52.h>
   9          #include<ds1302.h>
  10          #include<ds18b20.h>                        //k4进入调整设置              k3调整时间                    
  11          #include<lcd1602.h>                        //k2闹钟与时间界面切换                k1闹钟的启停
  12          #include<buling.h>
  13          #include<intrins.h>
  14          
  15          sbit k1=P3^1;//开
  16          sbit k2=P3^0;//关
  17          sbit k3=P3^2;//定
  18          sbit k4=P3^3;//义
  19          
  20          sbit beep=P1^5;//蜂鸣器定义
  21          
  22          uchar logo1[]=" MADE  BY ";
  23          uchar logo2[]="Li yaolong";
  24          uchar alarm[]="00:00";//闹钟时间
  25          uchar temper[5];  //温度
  26          uchar time_lcd[]="00:00:00";//实时时间            
  27          uchar date_lcd[]="2000-00-00"; //实时日期
  28          
  29          uchar code readdate_ctrl[]={0x81,0x83,0x85,0x8b,0x87,0x89,0x8d};  //读用数组 
  30          uchar code writedate_ctrl[]={0x80,0x82,0x84,0x8a,0x86,0x88,0x8c}; //写用数组 
  31          
  32          uchar zi[3][8]={{0x10,0x06,0x09,0x08,0x08,0x09,0x06,0x00},      //摄氏度图标
  33                                          {0x0A,0x1F,0x15,0x17,0x11,0x0E,0x1B,0x00},      //闹钟图标
  34                                          {0x00,0x04,0x0E,0x1F,0x1F,0x1F,0x00,0x00}};     //选中图标
  35          
  36          uchar week_lcd[][6]={{"error"},{"Mon."},{"Tues."},{"Wed."},{"Thur."},{"Fri."},{"Sat."},{"Sun."}};       //星期显
             -示数组
  37          
  38          #define count 50000
  39          #define thx (65536-count)/256 //定时器 初值  暂时未用
  40          #define tlx (65536-count)%256
  41          
  42          uchar flag=0,flag1=0,flag2=0,flag3=0,ii=0;                // flag:时间光标及时间调整控制变量
  43                                                                                                           //flag1:屏幕切换变量
  44          uint min=0,hour=0;                                                                               //flag2:闹钟光标及时间调整变量
  45                                                                                                                                          //ii:闹钟启停变量
  46          void delay6s()//开机logo维持  6s  
  47          {
  48   1          unsigned char a,b,c;
  49   1          for(c=182;c>0;c--)
  50   1              for(b=164;b>0;b--)
  51   1                  for(a=99;a>0;a--);
  52   1          _nop_();  //if Keil,require use intrins.h
  53   1      }
  54          void logo()//开机logo显示 
C51 COMPILER V9.00   MAIN                                                                  12/26/2018 15:00:50 PAGE 2   

  55          {
  56   1              uint k1,k2=3;
  57   1              for(k1=0;logo1[k1]!='\0';k1++)
  58   1              {
  59   2                      lcd1602_X_Y(1,k2++,logo1[k1]);
  60   2              } 
  61   1              k2=3;
  62   1              for(k1=0;logo2[k1]!='\0';k1++)
  63   1              {
  64   2                      lcd1602_X_Y(2,k2++,logo2[k1]);
  65   2              }delay6s();
  66   1              lcd1602_write_0(0x01);     //显示 完 清屏
  67   1              delay_lcd(2500);
  68   1      }                                                                      
  69          void read_temper(int dat)//温度转换函数
  70          {
  71   1              float tp;
  72   1              if(dat<0)
  73   1              {
  74   2                      temper[0]='-';
  75   2                      dat=dat-1;
  76   2                      dat=~dat;
  77   2                      tp=dat;
  78   2                      dat=tp*0.0625*10+0.5;   
  79   2              }
  80   1              else
  81   1              {
  82   2                      temper[0]=' ';          
  83   2                      tp=dat;
  84   2                      dat=tp*0.0625*10+0.5;
  85   2              }
  86   1      
  87   1              temper[1]=dat/100%10+'0';
  88   1              temper[2]=dat/10%10+'0';
  89   1              temper[3]='.';
  90   1              temper[4]=dat%10+'0';
  91   1      } 
  92          
  93          void timer() //时间转换函数
  94          {
  95   1              read_time();
  96   1      
  97   1              time_lcd[0]=time[3]/16+'0';
  98   1              time_lcd[1]=time[3]%16+'0';
  99   1              time_lcd[3]=time[4]/16+'0';
 100   1              time_lcd[4]=time[4]%16+'0';
 101   1              time_lcd[6]=time[5]/16+'0';
 102   1              time_lcd[7]=time[5]%16+'0';
 103   1      
 104   1              date_lcd[2]=time[0]/16+'0';
 105   1              date_lcd[3]=time[0]%16+'0';
 106   1              date_lcd[5]=time[1]/16+'0';
 107   1              date_lcd[6]=time[1]%16+'0';
 108   1              date_lcd[8]=time[2]/16+'0';
 109   1              date_lcd[9]=time[2]%16+'0';
 110   1      }
 111          
 112          void lcd_display()//LCD1602显示函数
 113          { 
 114   1              uint i,j,k=0,g=10;
 115   1              if(flag1==0)
 116   1              {       
C51 COMPILER V9.00   MAIN                                                                  12/26/2018 15:00:50 PAGE 3   

 117   2      //******************************************* 
 118   2                      for(i=0;date_lcd[i]!='\0';i++)
 119   2                      {                                 
 120   3                              lcd1602_X_Y(1,j++,date_lcd[i]);//日期显示 
 121   3                      }j++;
 122   2      //*******************************************
 123   2                      for(i=0;week_lcd[6][i]!='\0';i++)
 124   2                      {
 125   3                              lcd1602_X_Y(1,j++,week_lcd[time[6]][i]);//星期显示 
 126   3                      }
 127   2      //*******************************************            
 128   2                      for(i=0;time_lcd[i]!='\0';i++)
 129   2                      {
 130   3                              lcd1602_X_Y(2,k++,time_lcd[i]); //时间显示
 131   3                      }
 132   2      //*******************************************           
 133   2                      for(i=0;i<5;i++)
 134   2                      {
 135   3                              lcd1602_X_Y(2,g++,temper[i]);   //温度显示
 136   3                      }
 137   2              }
 138   1                      
 139   1      //*******************************************
 140   1              if(flag==0&&flag1==1)                     //第一次按下k2清屏 
 141   1              {
 142   2                      lcd1602_write_0(0x01);
 143   2                      delay_lcd(2500);
 144   2                      lcd1602_write_0(0x01);
 145   2                      flag1=2;
 146   2              }
 147   1      
 148   1              if(flag==0&&flag1==2)  //闹钟界面显示
 149   1              {
 150   2                      lcd1602_write_0(0x48);
 151   2                      for(i=0;i<8;i++)
 152   2                      {
 153   3                               lcd1602_write_1(zi[1][i]);
 154   3                      }       
 155   2                      lcd1602_write_0(0x80+5);                 
 156   2                      lcd1602_write_1(0x01);
 157   2                      lcd1602_write_0(0x80+6);
 158   2                      lcd1602_write_1(alarm[0]);
 159   2                      lcd1602_write_0(0x80+7);
 160   2                      lcd1602_write_1(alarm[1]);
 161   2                      lcd1602_write_0(0x80+8);
 162   2                      lcd1602_write_1(alarm[2]);
 163   2                      lcd1602_write_0(0x80+9);
 164   2                      lcd1602_write_1(alarm[3]);
 165   2                      lcd1602_write_0(0x80+10);       
 166   2                      lcd1602_write_1(alarm[4]);
 167   2                      lcd1602_write_0(0x80);
 168   2                      lcd1602_write_1(' ');
 169   2              }
 170   1              if(flag==0&&flag1==3)             //第二次 按下k2清屏
 171   1              {
 172   2                      lcd1602_write_0(0x01);
 173   2                      delay_lcd(2500);
 174   2                      lcd1602_write_0(0x01);
 175   2                      flag1=4;
 176   2              }
 177   1              if(flag==0&&flag1==4)     //回到  初始  时间  界面
 178   1              {
C51 COMPILER V9.00   MAIN                                                                  12/26/2018 15:00:50 PAGE 4   

 179   2                      flag1=0;
 180   2                      lcd_zidingyi(zi,8,1);     
 181   2                      lcd1602_X_Y(2,15,0x00);
 182   2              }
 183   1              alarm[4]=min%10+'0';     //闹
 184   1              alarm[3]=min/10+'0';     //钟
 185   1              alarm[1]=hour%10+'0';    //时
 186   1              alarm[0]=hour/10+'0';    //间
 187   1      
 188   1              if(flag3==1&&flag1!=2)     //开启闹钟   时间旁 显示闹钟小图标 
 189   1              {
 190   2                      lcd1602_write_0(0x48);
 191   2                      for(i=0;i<8;i++)
 192   2                      {
 193   3                               lcd1602_write_1(zi[1][i]);
 194   3                      }
 195   2                      lcd1602_write_0(0xc0+8);
 196   2                      lcd1602_write_1(0x01);
 197   2              }
 198   1              if(flag3==2)                     //关闭闹钟   时间旁 不显示闹钟小图标
 199   1              {
 200   2                      lcd1602_write_0(0xc0+8);
 201   2                      lcd1602_write_1(' ');
 202   2              }
 203   1              if(flag3==3)      //循环返回
 204   1              {
 205   2                      flag3=1;
 206   2              }
 207   1      }
 208          
 209          void stop()//外部中断0和1 初始化
 210          {
 211   1              EA=1;EX0=1;IT0=1;
 212   1              EX1=1;IT1=1;
 213   1      }
 214          
 215          void ctrltime()//光标控制函数
 216          {
 217   1              uchar temp;
 218   1              uint i;
 219   1              if(flag1==0)
 220   1              {
 221   2                      if(flag==1)
 222   2                      {
 223   3                              lcd1602_write_0(0xc0+7);
 224   3                              lcd1602_write_0(0x0f);                  //光标到秒位置
 225   3              
 226   3                              ds1302_write(0x8e,0x00);                 //时
 227   3                              temp=ds1302_read(0x81);                  //间
 228   3                              ds1302_write(0x80,temp|0x80);    //暂
 229   3                              ds1302_write(0x8e,0x80);                 //停
 230   3                      }
 231   2                      if(flag==2)
 232   2                      {
 233   3                              lcd1602_write_0(0xc0+4);
 234   3                              lcd1602_write_0(0x0f);            //光标到分位置
 235   3                      }
 236   2                      if(flag==3)
 237   2                      {
 238   3                              lcd1602_write_0(0xc0+1);
 239   3                              lcd1602_write_0(0x0f);             //光标到时位置
 240   3                      }
C51 COMPILER V9.00   MAIN                                                                  12/26/2018 15:00:50 PAGE 5   

 241   2                      if(flag==4)
 242   2                      {
 243   3                              lcd1602_write_0(0x80+11);
 244   3                              lcd1602_write_0(0x0f);                  //光标到星期位置
 245   3                      }
 246   2                      if(flag==5)
 247   2                      {
 248   3                              lcd1602_write_0(0x80+9);
 249   3                              lcd1602_write_0(0x0f);                  //光标到日位置
 250   3                      }
 251   2                      if(flag==6)
 252   2                      {
 253   3                              lcd1602_write_0(0x80+6);
 254   3                              lcd1602_write_0(0x0f);                  //光标到月位置
 255   3                      }
 256   2                      if(flag==7)
 257   2                      {
 258   3                              lcd1602_write_0(0x80+3);
 259   3                              lcd1602_write_0(0x0f);                  //光标到年位置
 260   3                      }
 261   2                      if(flag>7)
 262   2                      {
 263   3                              ds1302_write(0x8e,0x00);                 //时
 264   3                              temp=ds1302_read(0x81);                  //间
 265   3                              ds1302_write(0x80,temp|0x00);    //启
 266   3                              ds1302_write(0x8e,0x80);                 //动
 267   3                              flag=0;
 268   3                              lcd1602_write_0(0x0c);
 269   3                      }
 270   2              }
 271   1              if(flag==0&&flag1==2&&flag2!=0)
 272   1              {
 273   2                      switch(flag2)
 274   2                      {
 275   3                              case 1:                   //光标  定格  在  闹钟设置   分钟  位
 276   3                                      lcd1602_write_0(0x50);
 277   3                                      for(i=0;i<8;i++)
 278   3                                      {
 279   4                                               lcd1602_write_1(zi[2][i]);
 280   4                                      }
 281   3                                      lcd1602_write_0(0xc0+6);                 
 282   3                                      lcd1602_write_1(' ');
 283   3                                      lcd1602_write_0(0xc0+7);                 
 284   3                                      lcd1602_write_1(' ');   
 285   3                                      lcd1602_write_0(0xc0+9);                 
 286   3                                      lcd1602_write_1(0x02);
 287   3                                      lcd1602_write_0(0xc0+10);                
 288   3                                      lcd1602_write_1(0x02);   break;
 289   3                              case 2:                    //光标  定格  在  闹钟设置   小时  位
 290   3                                      lcd1602_write_0(0xc0+9);                 
 291   3                                      lcd1602_write_1(' ');
 292   3                                      lcd1602_write_0(0xc0+10);                
 293   3                                      lcd1602_write_1(' ');   
 294   3                                      lcd1602_write_0(0xc0+6);                 
 295   3                                      lcd1602_write_1(0x02);
 296   3                                      lcd1602_write_0(0xc0+7);                 
 297   3                                      lcd1602_write_1(0x02);   break;
 298   3                              case 3:                         //光标  循环  返回
 299   3                                      flag2=1;                 break;
 300   3                      }               
 301   2              }                        
 302   1      }
C51 COMPILER V9.00   MAIN                                                                  12/26/2018 15:00:50 PAGE 6   

 303          
 304          void key_2()//k2更换  闹钟 设置界面
 305          {
 306   1              if(k2==0)
 307   1              {
 308   2                      delay_lcd(2000);
 309   2                      if(k2==0)
 310   2                      {
 311   3                              if(flag==0)               //如果没有在  调整时间  触发  屏幕切换变量
 312   3                              {
 313   4                                      flag1++;
 314   4                              }
 315   3                      }
 316   2                      while(k2==0);            
 317   2              }       
 318   1      }
 319          
 320          
 321          
 322          
 323          void key_1()//k1闹钟的启停
 324          {
 325   1              if(k1==0)
 326   1              {
 327   2                      delay_lcd(2000);
 328   2                      if(k1==0)
 329   2                      {
 330   3                              if(flag==0&&flag1==0)                   //如果在初始界面并且没有在
 331   3                              {                                                               //闹钟设置界面   触发闹钟启停变量
 332   4                                      flag3++;
 333   4                              }
 334   3                              
 335   3                      }
 336   2                      while(k1==0);
 337   2              }
 338   1      }
 339          
 340          
 341          void buling()     //闹钟触发
 342          {
 343   1              uint t1,t2,temp_min,temp_hour,i;
 344   1              uint i1=0;
 345   1              uchar k1,i2;
 346   1              if(flag3==1&&ii==0&&flag==0)
 347   1              {
 348   2                      t1=ds1302_read(0x83);t2=ds1302_read(0x85);
 349   2                      temp_min =((t1&0xf0)>>4)*10+(t1&0x0f);  //BCD码转
 350   2                      temp_hour=((t2&0xf0)>>4)*10+(t2&0x0f);                  //十进制码
 351   2                      if(min==temp_min&&ii==0)                                
 352   2                      {
 353   3                              if(hour==temp_hour&&ii==0)
 354   3                              {
 355   4                                      if(flag==0&&ii==0)
 356   4                                      {
 357   5                                              lcd1602_write_0(0x01);
 358   5                                              delay_lcd(2500);
 359   5                                              lcd1602_write_0(0x48);
 360   5                                              for(i=0;i<8;i++)
 361   5                                              {
 362   6                                                       lcd1602_write_1(zi[1][i]);
 363   6                                              }                                                        
 364   5                                              lcd1602_write_0(0x80+5);                 
C51 COMPILER V9.00   MAIN                                                                  12/26/2018 15:00:50 PAGE 7   

 365   5                                              lcd1602_write_1(0x01);
 366   5                                              lcd1602_write_0(0x80+6);
 367   5                                              lcd1602_write_1(alarm[0]);
 368   5                                              lcd1602_write_0(0x80+7);
 369   5                                              lcd1602_write_1(alarm[1]);
 370   5                                              lcd1602_write_0(0x80+8);
 371   5                                              lcd1602_write_1(alarm[2]);
 372   5                                              lcd1602_write_0(0x80+9);
 373   5                                              lcd1602_write_1(alarm[3]);
 374   5                                              lcd1602_write_0(0x80+10);       
 375   5                                              lcd1602_write_1(alarm[4]);
 376   5                                              lcd1602_write_0(0x80);
 377   5                                              lcd1602_write_1(' ');
 378   5                                              
 379   5                                              TMOD = 1; ET0 = 1;EA = 1;               
 380   5                                              i2 = 0;
 381   5                                              time02 = 1; 
 382   5                                              while(ii==0)
 383   5                                              {
 384   6                                                      k1 = sszymmh[i2] + 7 * sszymmh[i2 + 1] - 1;
 385   6                                                      //第i2个是音符, 第i2+1个是第几个八度
 386   6                                                      timer0h = FREQH[k1]; //从数据表中读出频率数值
 387   6                                                      timer0l = FREQL[k1]; //实际上, 是定时的时间长度
 388   6                                                      time02 = sszymmh[i2 + 2]; //读出时间长度数值
 389   6                                                      i2 += 3;
 390   6                                                      song(); //发出一个音符
 391   6                                              }
 392   5                                              ii=0;
 393   5                                              lcd_zidingyi(zi,8,1);     
 394   5                                              lcd1602_X_Y(2,15,0x00);
 395   5                                      }
 396   4                              }
 397   3                      } 
 398   2              }
 399   1      }
 400          
 401          int main()//主函数 
 402          {       
 403   1              lcd1602_init();          //LCD1602初始化
 404   1              logo();            //开机logo定格
 405   1              lcd_zidingyi(zi,8,1);     //自定义   C   写入
 406   1              lcd1602_X_Y(2,15,0x00);   //   显示到  2行  15列
 407   1              stop();                   //中断初始化
 408   1              ds1302_init();            //DS1302初始化
 409   1              while(1)
 410   1              {
 411   2                      CE=1;                           //板子问题  P35拉高
 412   2      
 413   2                      read_temper(ds18b20_read_temp());         //温度读取
 414   2      
 415   2                      timer();//时间读取
 416   2      
 417   2                      key_2(); //k2更换  闹钟 设置界面
 418   2      
 419   2                      key_1();//k1闹钟的启停
 420   2      
 421   2                      buling(); //闹钟触发
 422   2                              
 423   2                      lcd_display();             //LCD显示
 424   2      
 425   2                      ctrltime();                             //时间调整
 426   2              }  
C51 COMPILER V9.00   MAIN                                                                  12/26/2018 15:00:50 PAGE 8   

 427   1              return 0;
 428   1      }
 429          
 430          void stop_1() interrupt 2//外部 中断 1   光标控制
 431          {
 432   1              delay_lcd(2000);
 433   1              if(k4==0)
 434   1              {
 435   2                      if(flag1==0)    //如果没有在闹钟设置界面   时间调整光标 控制  
 436   2                      {
 437   3                              flag++;
 438   3                      }
 439   2                      if(flag1==2)    //如果在闹钟设置界面   闹钟调整光标     控制 
 440   2                      {
 441   3                              flag2++;
 442   3                      }
 443   2              }
 444   1              while(k4==0);
 445   1      }                          
 446          
 447          void stop_2() interrupt 0//外部 中断 0     时间更改
 448          {
 449   1              uchar temp_1=0;
 450   1              delay_lcd(2000);
 451   1              if(k3==0)
 452   1              {
 453   2                      if((flag>0&&flag<8)&&flag1==0)    //如果 有 光标  且  没在闹钟设置界面 触发时间调整
 454   2                      {               
 455   3                              ds1302_write(0x8e,0x00);
 456   3                              temp_1=ds1302_read(readdate_ctrl[flag-1]);
 457   3                              temp_1++;
 458   3                              if((temp_1&0x0f)>9)
 459   3                              {
 460   4                                      temp_1=temp_1+6;
 461   4                              }        
 462   3                              if(flag==1||flag==2)               
 463   3                              {
 464   4                                      if(temp_1==0x60)           //秒和分最大59
 465   4                                      {
 466   5                                              temp_1=0x00;
 467   5                                      }
 468   4                              }
 469   3                              if(flag==3)
 470   3                              {
 471   4                                      if(temp_1==0x24)         //小时最大23
 472   4                                      {
 473   5                                              temp_1=0x00;
 474   5                                      }
 475   4                              }
 476   3                              if(flag==4)
 477   3                              {
 478   4                                      if(temp_1==0x08)        //星期最大  7
 479   4                                      {
 480   5                                              temp_1=0x01;
 481   5                                      }
 482   4                              }
 483   3                              if(flag==5)
 484   3                              {
 485   4                                      if(temp_1==0x32)         //日  最大31
 486   4                                      {
 487   5                                              temp_1=0x01;
 488   5                                      }
C51 COMPILER V9.00   MAIN                                                                  12/26/2018 15:00:50 PAGE 9   

 489   4                              }
 490   3                              if(flag==6)
 491   3                              {
 492   4                                      if(temp_1==0x13)                //月最大12
 493   4                                      {
 494   5                                              temp_1=0x01;
 495   5                                      }
 496   4                              }
 497   3                              if(flag==7)
 498   3                              {
 499   4                                      if(temp_1==0x31)        //以便 调整  年最大暂时设为  30
 500   4                                      {
 501   5                                              temp_1=0x00;
 502   5                                      }
 503   4                              }
 504   3                              ds1302_write(writedate_ctrl[flag-1],temp_1);
 505   3                              ds1302_write(0x8e,0x80);
 506   3                      
 507   3                      } 
 508   2                      if(flag==0&&flag1==2&&flag2==1)                         //闹钟界面分钟调整
 509   2                      {
 510   3                              min++;
 511   3                              if(min==60)min=0;       
 512   3                      }
 513   2                      if(flag==0&&flag1==2&&flag2==2)                         //闹钟界面小时调整
 514   2                      {
 515   3                              hour++;
 516   3                              if(hour==24)hour=0;     
 517   3                      }
 518   2                      while(k3==0);
 519   2              }
 520   1              
 521   1      }
 522          void t0int() interrupt 1 //T0中断程序，控制发音的音调
 523          {
 524   1              TR0 = 0; //先关闭T0
 525   1              speaker = !speaker; //输出方波, 发音
 526   1              TH0 = timer0h; //下次的中断时间, 这个时间, 控制音调高低
 527   1              TL0 = timer0l;
 528   1              TR0 = 1; //启动T0
 529   1              if(k1==0)
 530   1              {
 531   2                      delay_lcd(2000);
 532   2                      if(k1==0)
 533   2                      {
 534   3                              ii=1;//jj=1; 
 535   3                              flag1=3;
 536   3                              flag3=2;
 537   3                              ET0=0;
 538   3                      }
 539   2              }
 540   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2560    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =    134      28
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.00   MAIN                                                                  12/26/2018 15:00:50 PAGE 10  

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
