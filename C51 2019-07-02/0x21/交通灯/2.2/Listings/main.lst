C51 COMPILER V9.59.0.0   MAIN                                                              10/14/2021 09:12:35 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Software\ApplicationSoftware\Keil_v5\C51\BIN\C51.EXE src\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(
                    -.\src) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<reg52.h>
   2          #include"key.h"
   3          
   4          /**
   5                  定时器初值定义
   6          */
   7          #define     count                    50000
   8          #define     THx                      (65536 - count) / 256
   9          #define     TLx                      (65536 - count) % 256
  10          
  11          /**
  12                  功能宏定义
  13          */
  14          #define     GREEN_FLASHING_COUNT     3 // 绿灯倒计时闪烁次数 , 改成 0 即为不闪烁
  15          
  16          #define     YELLOW_TIME              2  //黄灯亮的时间
  17          #define     TIME_SMALL               20 //可调时间上限
  18          #define     TIME_BIG                 60 //可调时间下限
  19          #define     TIME                             10 //初始时间
  20          
  21          /**
  22                  数码管段码输出
  23          */
  24          #define   NS_Display     P0
  25          #define   EW_Display     P1
  26          
  27          /**
  28                  LED灯位定义
  29          */
  30          sbit NS_LED_Red    = P3^0; // 南北
  31          sbit NS_LED_Yellow = P3^1;
  32          sbit NS_LED_Green  = P3^2;
  33          
  34          sbit EW_LED_Red    = P3^3; // 东西
  35          sbit EW_LED_Yellow = P3^4;
  36          sbit EW_LED_Green  = P3^5;
  37          
  38          /**
  39                  数码管位定义
  40          */
  41          sbit bit_0 = P2^0;
  42          sbit bit_1 = P2^1;
  43          
  44          uchar code duanxuan[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
  45          
  46          uchar sec  = TIME; // 秒钟
  47          uchar secCache = TIME; // 在调整时间的后，要把调整的时间保存
  48          uchar state = 1; // LED 灯的状态
  49          
  50          bit FLASHING = 1; // 闪烁变量
  51          
  52          /**
  53                  延时函数
  54          */
C51 COMPILER V9.59.0.0   MAIN                                                              10/14/2021 09:12:35 PAGE 2   

  55          void delay(uint i)
  56          {
  57   1          while(i--);
  58   1      }
  59          
  60          /**
  61                  数码管显示函数
  62          */
  63          void display()
  64          {
  65   1          if(state == 1 || state == 2)        //状态1和状态2，东西比南北少2秒
  66   1          {
  67   2              bit_0 = 0;
  68   2              bit_1 = 1;
  69   2      
  70   2              NS_Display = duanxuan[ sec % 10 ];
  71   2              delay(100);
  72   2              NS_Display = 0x00;
  73   2              if(sec > YELLOW_TIME)
  74   2              {
  75   3                  EW_Display = duanxuan[ (sec - YELLOW_TIME) % 10 ];
  76   3                  delay(200);
  77   3                  EW_Display = 0x00;
  78   3              }
  79   2              else
  80   2              {
  81   3                  EW_Display = duanxuan[sec % 10];
  82   3                  delay(200);
  83   3                  EW_Display = 0x00;
  84   3              }
  85   2      
  86   2              bit_0 = 1;
  87   2              bit_1 = 0;
  88   2      
  89   2              NS_Display = duanxuan[sec / 10];
  90   2              delay(100);
  91   2              NS_Display = 0x00;
  92   2              if(sec > YELLOW_TIME)
  93   2              {
  94   3                  EW_Display = duanxuan[ (sec - YELLOW_TIME) / 10 ];
  95   3                  delay(200);
  96   3                  EW_Display = 0x00;
  97   3              }
  98   2              else
  99   2              {
 100   3                  EW_Display = duanxuan[sec / 10];
 101   3                  delay(200);
 102   3                  EW_Display = 0x00;
 103   3              }
 104   2          }
 105   1          else if(state == 3 || state == 4)//状态3和状态4，南北比东西少2秒
 106   1          {
 107   2              bit_0 = 0;
 108   2              bit_1 = 1;
 109   2      
 110   2              EW_Display = duanxuan[sec % 10];
 111   2              delay(100);
 112   2              EW_Display = 0x00;
 113   2              if(sec > YELLOW_TIME)
 114   2              {
 115   3                  NS_Display = duanxuan[ (sec - YELLOW_TIME) % 10 ];
 116   3                  delay(200);
C51 COMPILER V9.59.0.0   MAIN                                                              10/14/2021 09:12:35 PAGE 3   

 117   3                  NS_Display = 0x00;
 118   3              }
 119   2              else
 120   2              {
 121   3                  NS_Display = duanxuan[sec % 10];
 122   3                  delay(200);
 123   3                  NS_Display = 0x00;
 124   3              }
 125   2      
 126   2              bit_0 = 1;
 127   2              bit_1 = 0;
 128   2      
 129   2              EW_Display = duanxuan[sec / 10];
 130   2              delay(100);
 131   2              EW_Display = 0x00;
 132   2              if(sec > YELLOW_TIME)
 133   2              {
 134   3                  NS_Display = duanxuan[ (sec - YELLOW_TIME) / 10 ];
 135   3                  delay(200);
 136   3                  NS_Display = 0x00;
 137   3              }
 138   2              else
 139   2              {
 140   3                  NS_Display = duanxuan[sec / 10];
 141   3                  delay(200);
 142   3                  NS_Display = 0x00;
 143   3              }
 144   2          }
 145   1          else if(state == 6 || state == 7 || state == 8)      //路口通行管理
 146   1          {
 147   2              bit_0 = 0;
 148   2              bit_1 = 1;
 149   2      
 150   2              NS_Display = 0x3f; // 0x3f 是 8。也可以改成0x00
 151   2              delay(100);
 152   2              NS_Display = 0x00;
 153   2              EW_Display = 0x3f;
 154   2              delay(100);
 155   2              EW_Display = 0x00;
 156   2      
 157   2              bit_0 = 1;
 158   2              bit_1 = 0;
 159   2      
 160   2              NS_Display = 0x3f;
 161   2              delay(100);
 162   2              NS_Display = 0x00;
 163   2              EW_Display = 0x3f;
 164   2              delay(100);
 165   2              EW_Display = 0x00;
 166   2          }
 167   1      }
 168          
 169          void led_display()
 170          {
 171   1          if(state == 1)      //s1
 172   1          {
 173   2              EW_LED_Red = 0;
 174   2              EW_LED_Green = 1;
 175   2              EW_LED_Yellow = 1;
 176   2      
 177   2              NS_LED_Red = 1;
 178   2      
C51 COMPILER V9.59.0.0   MAIN                                                              10/14/2021 09:12:35 PAGE 4   

 179   2              if((sec - YELLOW_TIME) > GREEN_FLASHING_COUNT)
 180   2                  NS_LED_Green = 0;
 181   2              else
 182   2              {
 183   3                              NS_LED_Green = FLASHING;
 184   3              }
 185   2      
 186   2              NS_LED_Yellow = 1;
 187   2          }
 188   1          else if(state == 2) //s2
 189   1          {
 190   2              EW_LED_Red = 0;
 191   2              EW_LED_Green = 1;
 192   2              EW_LED_Yellow = 1;
 193   2      
 194   2              NS_LED_Red = 1;
 195   2              NS_LED_Green = 1;
 196   2              NS_LED_Yellow = 0;
 197   2      
 198   2          }
 199   1          else if(state==3) //s3
 200   1          {
 201   2              EW_LED_Red=1;
 202   2      
 203   2              if((sec - YELLOW_TIME) > GREEN_FLASHING_COUNT)
 204   2                  EW_LED_Green = 0;
 205   2              else
 206   2              {
 207   3                              NS_LED_Green = 0;
 208   3              }
 209   2      
 210   2              EW_LED_Yellow = 1;
 211   2      
 212   2              NS_LED_Red = 0;
 213   2              NS_LED_Green = 1;
 214   2              NS_LED_Yellow = 1;
 215   2          }
 216   1          else if(state == 4) //s4
 217   1          {
 218   2              EW_LED_Red = 1;
 219   2              EW_LED_Green = 1;
 220   2              EW_LED_Yellow = 0;
 221   2      
 222   2      
 223   2              NS_LED_Red = 0;
 224   2              NS_LED_Green = 1;
 225   2              NS_LED_Yellow = 1;
 226   2          }
 227   1          else if(state == 5)  //回到s1
 228   1          {
 229   2              state = 1;
 230   2          }
 231   1          else if(state == 6)
 232   1          {
 233   2              EW_LED_Red = 1;
 234   2              EW_LED_Green = 1;
 235   2              EW_LED_Yellow = 0;
 236   2      
 237   2              NS_LED_Red = 1;
 238   2              NS_LED_Green = 1;
 239   2              NS_LED_Yellow = 0;
 240   2          }
C51 COMPILER V9.59.0.0   MAIN                                                              10/14/2021 09:12:35 PAGE 5   

 241   1          else if(state == 7)
 242   1          {
 243   2              EW_LED_Red = 1;
 244   2              EW_LED_Green = 0;
 245   2              EW_LED_Yellow = 1;
 246   2      
 247   2              NS_LED_Red = 0;
 248   2              NS_LED_Green = 1;
 249   2              NS_LED_Yellow = 1;
 250   2          }
 251   1          else
 252   1          {
 253   2              EW_LED_Red = 0;
 254   2              EW_LED_Green = 1;
 255   2              EW_LED_Yellow = 1;
 256   2      
 257   2              NS_LED_Red = 1;
 258   2              NS_LED_Green = 0;
 259   2              NS_LED_Yellow = 1;
 260   2          }
 261   1      }
 262          void key()
 263          {
 264   1          uchar k = Read_Key();
 265   1          static uchar i = 0;
 266   1          static uchar stateCache = 0;
 267   1          if(k == 4) {
 268   2              i++;
 269   2                      if(i == 1)
 270   2                      {
 271   3                              stateCache = state;
 272   3                      }
 273   2              TR0 = 0;
 274   2          }
 275   1          if(k == 3 && TR0 == 0 && sec < TIME_BIG && (state == 1 || state == 2 || state == 3 || state == 4))
 276   1          {
 277   2              sec = sec + YELLOW_TIME;
 278   2              secCache = sec;
 279   2          }
 280   1          if(k == 2 && TR0 == 0 && sec > TIME_SMALL && (state == 1 || state == 2 || state == 3 || state == 4))
 281   1          {
 282   2              sec = sec - YELLOW_TIME;
 283   2              secCache = sec;
 284   2          }
 285   1          if(k == 1 && (state == 1 || state == 2 || state == 3 || state == 4))
 286   1          {
 287   2              TR0 = ~TR0;
 288   2          }
 289   1          if(i == 1) {
 290   2              state = 6;
 291   2          }
 292   1          if(i == 2) {
 293   2              state = 7;
 294   2          }
 295   1          if(i == 3) {
 296   2              state = 8;
 297   2          }
 298   1          if(i == 4) {
 299   2                      state = stateCache;
 300   2                      stateCache = 0;
 301   2              TR0 = 1;
 302   2              i = 0;
C51 COMPILER V9.59.0.0   MAIN                                                              10/14/2021 09:12:35 PAGE 6   

 303   2          }
 304   1      }
 305          
 306          /**
 307                  定时器初始化函数
 308          */
 309          void Tim_Init()
 310          {
 311   1          TMOD = 0x11;
 312   1          EA = 1;
 313   1          ET0 = 1;
 314   1          TR0 = 1;
 315   1          ET1 = 1;
 316   1          TR1 = 1;
 317   1          TH0 = THx;
 318   1          TL0 = TLx;
 319   1          TH1 = THx;
 320   1          TL1 = TLx;
 321   1      }
 322          void main(void)
 323          {
 324   1          Tim_Init();
 325   1          while(1)
 326   1          {
 327   2              display();
 328   2              led_display();
 329   2              key();
 330   2          }
 331   1      }
 332          
 333          void TIME0() interrupt 1
 334          {
 335   1          static uchar j = 0;
 336   1          TH0 = THx;
 337   1          TL0 = TLx;
 338   1              j++;
 339   1          if(j == 20)
 340   1          {
 341   2              j = 0;
 342   2              sec--;
 343   2              if(sec == 0)
 344   2              {
 345   3                  sec = secCache;
 346   3                  state++;//s3
 347   3      
 348   3              }
 349   2              if(sec - YELLOW_TIME == 0)
 350   2              {
 351   3                  state++;//s2           s4
 352   3              }
 353   2          }
 354   1      }
 355          
 356          void TIME1() interrupt 3
 357          {
 358   1          static uchar j = 0;
 359   1          TH1 = THx;
 360   1          TL1 = TLx;
 361   1          if(++j == 10) {
 362   2              j = 0;
 363   2              FLASHING = ~FLASHING;
 364   2          }
C51 COMPILER V9.59.0.0   MAIN                                                              10/14/2021 09:12:35 PAGE 7   

 365   1      }
 366          
 367          
 368          
 369          
 370          
 371          
 372          
 373          
 374          
 375          
 376          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    950    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
